var MongoClient = require('mongodb').MongoClient;
var url = "mongodb://localhost:27017/";

MongoClient.connect(url, function savedb(err, db) {
    if (err) throw err;
    var dbo = db.db("lintudb");
    var objselect = [
        {name: 'Aufgabe 1', id: 1, visible: false, difficulty: 10},
        {name: 'Aufgabe 2', id: 2, visible: false, difficulty: 30},
        {name: 'Aufgabe 3', id: 3, visible: false, difficulty: 60},
        {name: 'Aufgabe 4', id: 4, visible: false, difficulty: 80}
    ];

    var objtask = [
        {
            aufgabennummer: '1',
            aufgabentitel: 'Übung 1',
            aufgabe: '#Herzlich Willkommen zur zweiten Übung von Lintu  ##Jetzt wissen schon einige Bash-Kommandos ###Das Kapitel wird diese aufgreifen und erweitern. Es behandelt die folgenden Themengebiete:  * Dateien als Ganzes  * Verschieben  * Löschen   Verwenden Sie für die folgenden Aufgaben, die folgenden Kommandos um zu einer vielversprechenden Lösung zu kommen:   1. **cat** 2. **head** 3. **rm**  4. **echo**   Wenn sie sich der Funktionen der Kommandos bewusst sind wird diese Übung für Sie kein Problem darstellen.      1. In welchem Verzeichnis finden Sie die wichtigsten Benutzerkommandos?  2. Lassen Sie sich diesen Verzeichnisinhalt in Langform seitenweise anzeigen!  3. Erstellen Sie die Datei „kdolist“, die die Namen der wichtigsten Benutzerkommandos enthält! (Nur die Kommandonamen!)  4. Wie viele Benutzerkommandos wurden Ihnen angezeigt?  5. Wo finden Sie die Systemverwalterkommandos?  6. Lassen Sie sich „allkdolist“ alphabetisch sortiert am Bildschirm anzeigen!  7. Erzeugen Sie die Datei „header“ mit dem Inhalt „Alle Kommandos:“! (mit „echo“!)  8. Erzeugen Sie die Datei „trailer“ mit dem Inhalt „Insgesamt Anzahl /* Hier soll die Zahl der Kommandos stehen */ Kommandos“  9. Machen Sie aus „header“, „allkdolist“ und „trailer“ eine einzige sinnvolle Datei, Name „summary“!  10. Lassen Sie sich „summary“ in umgekehrter Reihenfolge seitenweise anzeigen!  11. Wandeln Sie alle Buchstaben in „header“ in Großbuchstaben um und speichern Sie das Ergebnis in „Header“ ab!  12. Benennen Sie „Header“ in „HEADER“ um!  13. Erzeugen Sie im Heimatverzeichnis das Verzeichnis „testdir“!  14. Verschieben Sie „summary“ nach testdir! (Kontrolle!)  15. Legen Sie im Heimatverzeichnis die Kopie „summary.save“ von „summary“ an!  16. Können Sie im Heimatverzeichnis eine gleichnamige Datei „summary“ als Kopie derer in „testdir“ wieder anlegen?  17. Geben Sie der Datei „summary“ den zweiten Namen „summary2“!  18. Was geschieht mit „summary2“, wenn Sie „summary“ löschen?  19. Löschen Sie jetzt „summary2“ und versuchen Sie einen erneuten Zugriff auf „summary.s“! Was geschieht?  20. Löschen Sie mit einem einzigen Kommando „testdir“ mit allen darin enthaltenen Dateien!  21. Löschen Sie mit einem einzigen Kommando alle heute neu erzeugten Dateien!   ####Wenn sie alle Aufgaben korrekt lösen konnten fahren Sie bitte mit der nächsten Übung fort, weiterhin viel Erfolg beim Erlernen der Kommandosprache. ',
            solution: '###Hier ist eine aufgelistete Lösung zu Aufgabenteil 1 ###Das Lintu-team wünscht weiterhin Viel Spaß beim lernen  **Lösung:**  1. pwd  2. ls –a  3. ls –la  4. ls Desktop  5. Dateien in Desktop werden am Bildschirm angezeigt.  6. ls –R  7. mkdir kurs; mkdir kurs/.Ver1; mkdir kurs/Ver1; mkdir kurs/Ver1/uver1; mkdir kurs/Ver1/uver2 Reihenfolge!  8. ls kurs oder ls –l kurs  9. cd kurs/Ver1/uver2; pwd  10. ls –a Es gibt die Einträge „.“ Und „..“  11. cd ..  12. cd ..  13. cd  14. rmdir kurs/Ver1/uver2 kurs/Ver1/uver1 mkdir kurs/Ver1 mkdir kurs/.Ver1 kurs  15. ls –l /  16. ls /usr/bin '
        },
        {
            aufgabennummer: '2',
            aufgabentitel: 'Übung 2',
            aufgabe: '#Herzlich Willkommen zu Lintu:  ##Im folgenden werden sie lernen einige Bash-Funktionen richtig anwenden zu können:  ####Dieses Kapitel behandelt die folgenden Themengebiete:  * Das Dateisystem von Linux * Kommando für Verzeichnisse   Verwenden Sie für die folgenden Aufgaben, die folgenden Kommandos  um zu einer vielversprechenden Lösung zu kommen:   1. **pwd** 2. **ls -a/ -l/ -R/ -1**  3. **mkdir** 4.  **cd**  Wenn sie sich der Funktionen der folgenden Kommandos bewusst sind wird diese Übung für Sie kein Problem darstellen.      1. Stellen Sie den Namen des aktuellen Verzeichnisses fest!  2. Welche Dateien und Unterverzeichnisse enthält das Heimatverzeichnis? (Alle!)  3. Wie erkennen Sie, ob es sich um eine „reguläre“ Datei oder um ein Verzeichnis handelt? (ausführliche Anzeige!)  4. Welche Dateien enthält das Verzeichnis „Desktop“?  5. Was fällt im Vergleich mit der Bildschirmanzeige auf?  6. Lassen Sie sich rekursiv den Verzeichnisbaum des Heimatverzeichnisses anzeigen!  7. Erstellen Sie im Heimatverzeichnis folgende Verzeichnisstruktur: kurs/.Ver1 kurs/Ver1 kurs/Ver1/uver1 kurs/Ver1/uver2  8. Lassen Sie sich den Inhalt von kurs anzeigen! (Zwei verschiedene Möglichkeiten!)  9. Machen Sie „kurs/Ver1/uver2“ zum Arbeitsverzeichnis und überprüfen Sie den Erfolg!  10. Lassen Sie sich alle Dateinamen darin anzeigen! Was fällt auf?  11. Machen Sie kurs/Ver1 zum Arbeitsverzeichnis, ohne seinen Namen explizit zu verwenden.  12. Machen Sie kurs zum Arbeitsverzeichnis, ohne seinen Namen explizit zu verwenden.  13. Machen Sie das Heimatverzeichnis wieder zum Arbeitsverzeichnis!  14. Löschen Sie die (neu) erzeugten Verzeichnisse wieder!  15. Welche Dateien und Verzeichnisse enthält das Wurzelverzeichnis „/“?  16. Welche Dateien enthält das Verzeichnis „/usr/bin“?  ####Wenn sie alle Aufgaben korrekt lösen konnten fahren Sie bitte mit der nächsten Übung fort und herzlichen Glückwunsch zum ersten Einstieg in die Kommandosprache von Linux.',
            solution: '###Hier ist eine aufgelistete Lösung zu Aufgabenteil 1 ###Das Lintu-team wünscht weiterhin Viel Spaß beim lernen  **Lösung:**  1. pwd  2. ls –a  3. ls –la  4. ls Desktop  5. Dateien in Desktop werden am Bildschirm angezeigt.  6. ls –R  7. mkdir kurs; mkdir kurs/.Ver1; mkdir kurs/Ver1; mkdir kurs/Ver1/uver1; mkdir kurs/Ver1/uver2 Reihenfolge!  8. ls kurs oder ls –l kurs  9. cd kurs/Ver1/uver2; pwd  10. ls –a Es gibt die Einträge „.“ Und „..“  11. cd ..  12. cd ..  13. cd  14. rmdir kurs/Ver1/uver2 kurs/Ver1/uver1 mkdir kurs/Ver1 mkdir kurs/.Ver1 kurs  15. ls –l /  16. ls /usr/bin '
        },
        {
            aufgabennummer: '3',
            aufgabentitel: 'Übung 3',
            aufgabe: '#Herzlich Willkommen zur dritten Übung von Lintu  ###Diese Kapitel wird folgende Themengebiete behandeln:  * Dateiorganisation * Aufrufe durch Selektion   Verwenden Sie für die folgenden Aufgaben, die folgenden Kommandos um zu einer vielversprechenden Lösung zu kommen:   1. **ls -l/ (Pfad)/ [!  ]/ [xyz]** 2. **touch** 3. **less**  Wenn sie sich der Funktionen der Kommandos bewusst sind wird diese Übung für Sie kein Problem darstellen.      * Lassen Sie sich alle Kommandos in /bin und /usr/bin anzeigen, deren Namen  * mit x beginnen,  * mit d aufhören,  * mit x beginnen und mit d aufhören,  * eine Ziffer enthalten  * ein e enthalten, das weder am Anfang, noch am Ende steht,  * mit „y“ oder „z“ beginnen, g) nicht mit „x“ „y“ oder „z“ beginnen;   * aus genau einem Zeichen besteht, i) aus genau zwei Zeichen besteht,   * aus genau zwei oder drei Zeichen besteht (Vorsicht!)!. Unterscheiden Sie dabei die Ausgabe mit und ohne die Option „d“! Was bedeutet sie?  * Lassen Sie sich alle Dateien im Heimatverzeichnis anzeigen, die mit „.“ Beginnen!  * Gibt es Dateien in Ihrem Home-Verzeichnis oder einem Unterverzeichnis, die in ihrem Namen einen Punkt haben, der nicht am Anfang steht?  * Erzeugen Sie eine Datei mit dem Namen „d?“  * Erzeugen Sie eine Datei mit dem Namen „d*“!  * Löschen Sie „d?“ und vergewissern Sie sich, dass auch nur diese Datei gelöscht ist!  * Erzeugen Sie von „d*“ einen Hardlink und einen Softlink! Wie unterscheiden sich die entsprechenden Anzeigen bei „ls –l“?  * Welches Verzeichnis wird mittels „ls –l ~“ angezeigt? Bestimmen Sie die Eigentümer, Gruppenzugehörigkeiten, Dateigrößen, Anzahl der „Links“ in der Ausgabe!   ####Wenn sie alle Aufgaben korrekt lösen konnten fahren Sie bitte mit der nächsten Übung fort, weiterhin viel Erfolg beim Erlernen der Kommandosprache. ',
            solution: '###Hier ist eine aufgelistete Lösung zu Aufgabenteil 3: ###Das Lintu-team wünscht weiterhin Viel Spaß beim lernen  **Lösung:**  * Aufgabenteil 3: * ls –d /bin/x* /usr/bin/x*, besser: ls –d /bin/x* /usr/bin/x* | less   * ls /bin/*d /usr/bin/*d |less   * ls /bin/x*d /usr/bin/x*d   * ls /bin/*[0-9]* /usr/bin/*[0-9]*   * ls /bin/?*e?* /usr/bin/?*e?*   * ls /bin/[yz]* /usr/bin/[yz]*   * ls /bin/[!xyz]* /usr/bin/[!xyz]*   * ls /bin/? /usr/bin/?   * ls /bin/?? /usr/bin/??   * ls /bin/?? /bin/??? /usr/bin/?? /usr/bin/??? (Es werden ohne die Option „d“ Verzeichnisse mit drei Buchstaben (z.B X11) vollständig angezeigt. „ls –d“ zeigt den Inhalt der Unterverzeichnisse nicht an.)  * ls –d .*  * Überprüfung im Home-Verzeichnis mit ls *?.*  * touch d\\?  * touch d\\*  * rm d\\? oder rm “d?“. ls d* zeigt dann die restlichen Dateien an.  * Hardlink: ln d\\* hlink, Softlink: ln –s d\\* slink, Unterschiede in der farblichen Darstellung, Dateityp beim Softlink “l”, beim Hardlink „-„. Dateiname bei Softlink „slink -> d*“  * Heimatverzeichnis '
        },
        {
            aufgabennummer: '4',
            aufgabentitel: 'Übung 4',
            aufgabe: '#Herzlich Willkommen zur vierten Übung von Lintu  ###Dieses Kapitel wird die folgenden Themengebiete aufgreifen und behandeln.   * Benutzerrechte  * Wiederholung der Selektion  Verwenden Sie für die folgenden Aufgaben, die folgenden Kommandos und aus den vorhergehenden Übungen um zu einer vielversprechenden Lösung zu kommen:  1. **cat** 2. **wc** 3. **tac** 4. **head** and **tail**  Wenn sie sich der Funktionen der folgenden Kommandos bewusst sind wird diese Übung für Sie kein Problem darstellen.     1. Erstellen Sie Datei „syskdolist“ mit den wichtigsten Systemverwalterkommandos?  2. Wie viele davon gibt es?  3. Schreiben Sie „syskdolist“ nach „kdolist“ in die Datei „allkdolist“!  4. Lassen Sie sich „allkdolist“ alphabetisch sortiert am Bildschirm anzeigen!  5. Machen Sie aus „header“, „allkdolist“ und „trailer“ eine einzige sinnvolle Datei, Name „summary“!  6. Lassen Sie sich die ersten 10 Zeilen von „summary“ anzeigen!  7. Lassen Sie sich die ersten 12 Zeilen von „summary“ anzeigen!  8. Lassen Sie sich die letzten 10 Zeilen von „summary“ anzeigen!  9. Lassen Sie sich die letzten 20 Zeilen von „summary“ anzeigen!  10. Erzeugen Sie die Datei „datei_r“ (mit Inhalt), auf die nur der Eigentümer lesenden Zugriff hat. Andere Zugriffsrechte sollen nicht bestehen.  11. Was geschieht bei cat datei_r?  12. Was geschieht bei „cat > datei_r“?  13. Erstellen Sie das Unterverzeichnis „sub“ und verschieben Sie „datei_r“ dorthin! Vergeben Sie die Zugriffsrechte so, dass Sie die Datei nicht mehr (versehentlich) löschen können!  14. Nehmen Sie sich für „sub“ das x-Recht. Was geschieht bei „cd sub“, und erklären Sie das Verhalten!  15. Löschen Sie die erzeugten Dateien sowie „sub“ wieder!   ####Wenn sie alle Aufgaben korrekt lösen konnten fahren Sie bitte mit der nächsten Übung fort, weiterhin viel Erfolg und Spaß beim Erlernen der Kommandosprache. ',
            solution: '###Hier ist eine aufgelistete Lösung zum Aufgabenteil 4: ###Das Lintu-team wünscht weiterhin Viel Spaß beim lernen  **Lösung:**  1. ls /sbin > syskdolist besser ls -1 /sbin > syskdolist 2. wc -l <syskdolist 3. cat kdolist syskdolist >allkdolist  4. cat allkdolist | sort | less oder: sort allkdolist | less 5. head summary 6. head -n 12 summary 7. tail summary 8. tail -n20 summary 9. head -n150 summary | tail -n50 | less 10. tac summary 11. cat > datei_r, Dateneingabe bis CTRL-d, chmod u=r datei_r  12. Anzeige der Datei ohne Bildschirmkontrolle  13. mkdir sub; mv datei_r sub; chmod u–w sub  14. chmod u-x sub. Ein Wechsel in das Verzeichnis mittels cd ist nicht mehr möglich.  15. rm –r sub; rm d\\* slink hlink '
        },
    ];

    dbo.collection("alltasks").insertMany(objselect, function (err, res) {
        if (err) throw err;
        console.log("Number of documents inserted: " + res.insertedCount);
        db.close();
    });

    dbo.collection("task").insertMany(objtask, function (err, res) {
        if (err) throw err;
        console.log("Number of documents inserted: " + res.insertedCount);
        db.close();
    });
});
